# ===============================
# =          Configura\u00e7\u00f5es do Servidor Web         =
# ===============================
# Porta para comunica\u00e7\u00e3o no Servidor Web:
server.port = 8080

# ===============================
# =       Configura\u00e7\u00f5es JPA / HIBERNATE           =
# ===============================
# Apresentar log das consultas SQL:
spring.jpa.show-sql = true
# Hibernate ddl auto (create, create-drop, validate, update): com "update" 
# o esquema do banco de dados ser\u00e1 automaticamente atualizado de  
# acordo com as entidades Java encontradas no projeto. 
spring.jpa.hibernate.ddl-auto = update
# Estrat\u00e9gia para a cria\u00e7\u00e3o de nomes:
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
# O dialeto SQL faz com que o Hibernate gere melhores SQL's para o Sistema Gerenciador de Banco de Dados escolhido:
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# ======================================
# =                           DATA SOURCE                                   =
# = Configura\u00e7\u00f5es para conex\u00e3o com o banco de dados. =
# ======================================
# URL de conex\u00e3o com o banco "maquinadebusca":
spring.datasource.url = jdbc:mysql://localhost:3306/maquinadebusca2
# Username and password:
spring.datasource.username = root
spring.datasource.password =
# Mant\u00e9m a conec\u00e7\u00e3o aberta se o sistema ficar inativo por muito tempo (necess\u00e1rio em produ\u00e7\u00e3o):
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1
